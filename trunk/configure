#!/usr/bin/perl

# Chained's new configure script ... thanks to InspIRCd for saving me a lot of manual reading :P

if ( -f "./config.lastrun")
{
  eval { do "./config.lastrun"; }
}

open(LR, ">", "config.lastrun~") or die("lr open failed");

$libs = "-lm -lc";
$modules = "";
$location = `pwd`;

print "When prompted, please enter your choice from the square brackets.
Your previous answers are displayed in parenthese.
Hitting enter will cause it to use your previous answer.


Detecting OS requirements...
============================

Looking for dl... ";
if (-f "/usr/lib/libdl.a")
{
  print "found, using -ldl\n";
  $DL = 1;
  $libs .= " -ldl"
}
else
{
  print "not found.\n";
  $DL = 0;
}

print "
Attempting to detect OS capabilities
====================================

Installing to /usr/lib/libchained.so and /usr/include/libchained/ \n";

#############################

print "\nLooking for openssl... ";
if (-f "/usr/include/openssl/opensslv.h")
{
  print "found!
You appear to have OpenSSL support available.
Do you wish to compile support for it? [y/n] ($last_openssl) ";

  chomp($openssl = <STDIN>);
  if ($openssl eq "") { $openssl = $last_openssl; }

  $openssl =~ s/^(.).*$/\1/;

  if (($openssl eq "n") or ($openssl eq "N"))
	{
	  $openssl = "n";
  }
  else
	{
	  print "Compiling OpenSSL support!\n";
	  $openssl = "y";
		$libs .= " -lssl"
	}
}
else
{
  print "not found.\n";
  $openssl = "n";
}

print LR "\$last_openssl='$openssl';\n";

close LR;
rename "config.lastrun~", "config.lastrun";


#######################################################################
#######################################################################
#######################################################################

print "\nCreating Makefiles...\n";

#####################################

chdir "src/libchained/";

print "> src/libchained/config.h\n";

open(MC, ">config.h");

if ($openssl eq "y")
{
  print MC "#define __CIS_HAS_OPENSSL__ 1\n";
}

close MC;

chdir "..";

####################################

print "> src/Makefile\n";

print "> > Generating object list\n";

open(MF, ">Makefile");

$OBJS = "";
open(GREP, 'grep -LE "CHAINED: (IGNORE|NORULE)" */*.c *.c |');
while (<GREP>)
{
  $f = $_;
  chomp($f);
  $f =~ s/\.c$//;
  $OBJS .= " $f.o";
  `gcc -export-dynamic -g -fPIC -c -MM -MG -MT $f.o -I. $f.c >> Makefile.t`;
	`echo "" >> Makefile.t`;
}
close GREP;

print MF "
CC = gcc
CFLAGS = -export-dynamic -g -fPIC -I.
LIBS = $libs
OBJS = $OBJS

# ----

all:	\$(OBJS)
	\$(CC) \$(CFLAGS) \$(LIBS) -shared -o libchained.so \$(OBJS)

# ----

clean:
	rm -f *.o *.so

# ----

install:
	cp libchained.so /usr/lib/libchained.so.0.0
	cp libchained.so /usr/lib/libchained.so.0
	cp libchained.so /usr/lib/libchained.so
	mkdir -p /usr/include/libchained/types
	cp libchained/*.h /usr/include/libchained/
	cp libchained/types/*.h /usr/include/libchained/types

";

close MF;
`cat Makefile.t >> Makefile`;
`rm Makefile.t`;

chdir "..";

#####################################

print "
------------------------------
       Config complete.
------------------------------
";
