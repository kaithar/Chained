#!/usr/bin/perl

# Chained's new configure script ... thanks to InspIRCd for saving me a lot of manual reading :P

if ( -f "./config.lastrun")
{
  eval { do "./config.lastrun"; }
}

open(LR, ">", "config.lastrun~") or die("lr open failed");

$libs = "-lm -lc";
$modules = "";
$location = `pwd`;

print "When prompted, please enter your choice from the square brackets.
Your previous answers are displayed in parenthese.
Hitting enter will cause it to use your previous answer.


Detecting OS requirements...
============================

Looking for dl... ";
if (-f "/usr/lib/libdl.a")
{
  print "found, using -ldl\n";
  $DL = 1;
  $libs .= " -ldl"
}
else
{
  print "not found.\n";
  $DL = 0;
}

print "
Attempting to detect OS capabilities
====================================

Installing to /usr/lib/libchained.so and /usr/include/libchained/ \n";

#############################

print "\nLooking for openssl... ";
if (-f "/usr/include/openssl/opensslv.h")
{
  print "found!
You appear to have OpenSSL support available.
Do you wish to compile support for it? [y/n] ($last_openssl) ";

  chomp($openssl = <STDIN>);
  if ($openssl eq "") { $openssl = $last_openssl; }

  $openssl =~ s/^(.).*$/\1/;

  if (($openssl eq "n") or ($openssl eq "N"))
	{
	  $openssl = "n";
  }
  else
	{
	  print "Compiling OpenSSL support!\n";
	  $openssl = "y";
		$libs .= " -lssl"
	}
}
else
{
  print "not found.\n";
  $openssl = "n";
}

print LR "\$last_openssl='$openssl';\n";

close LR;
rename "config.lastrun~", "config.lastrun";


#######################################################################
#######################################################################
#######################################################################

print "\nCreating Makefiles...\n";

#####################################

print "> src/libchained/Make_config\n";

chdir "src/libchained/";

open(MC, ">Make_config");

print MC "CC = gcc
CFLAGS = -export-dynamic -g -fPIC
LIBS = $libs
INCLUDES = ";

open (GREP, 'grep -L "CHAINED: IGNORE" *.h|');
while (<GREP>)
{
  $f = $_;
  chomp($f);
  print MC " \\\n \$(INCLUDE_DIR)$f";
}
print MC "\n";
close GREP;
close MC;

#####################################

print "> src/libchained/config.h\n";

open(MC, ">config.h");

if ($openssl eq "y")
{
  print MC "#define __CIS_HAS_OPENSSL__ 1\n";
}

close MC;

chdir "..";

####################################

print "> src/Makefile\n";

print "> > Generating object list\n";

open(MF, ">Makefile");

$OBJS = "";
open(GREP, 'grep -LE "CHAINED: (IGNORE|NORULE)" *.c |');
while (<GREP>)
{
  $f = $_;
  chomp($f);
  $f =~ s/\.c$/.o/;
  $OBJS .= " $f";
}
close GREP;

# HACK: FIXME: This needs to be handled better!
if ($openssl eq "y") 
{
  $OBJS .= " openssl.o";
}

print MF "INCLUDE_DIR = libchained/

include \$(INCLUDE_DIR)Make_config
OBJS = $OBJS

all:	\$(OBJS)
	\$(CC) \$(CFLAGS) \$(LIBS) -shared -o libchained.so \$(OBJS)

# ----

\$(OBJS):	\$(INCLUDES)

# ----

clean:
	rm -f *.o *.so

# ----

install:
	cp libchained.so /usr/lib/libchained.so.0.0
	cp libchained.so /usr/lib/libchained.so.0
	cp libchained.so /usr/lib/libchained.so
	mkdir -p /usr/include/libchained/types
	cp libchained/*.h /usr/include/libchained/
	cp libchained/types/*.h /usr/include/libchained/types
";

close MF;

chdir "..";
#####################################

print "> echo/Makefile\n";

chdir "echo";

open (MF, ">Makefile");

print MF "all: echo

echo: echo.c
	gcc -lchained -g -fPIC -o echo echo.c

clean:
	rm echo
";

close MF;

chdir "..";

#####################################

print "
------------------------------
       Config complete.
------------------------------
";
